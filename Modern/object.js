const o = {};
o.a = 1;
console.log(o);

//변수가 참조하던 메모리 공간의 주소가 변경된 이유는 변수에 할당된 원시 값이 변경 불가능한 값이기 때문
//원시값은 변경 불가능한 값이기 때문에 값을 직접 변경할 수는 없음
//변수값을 변경하기 위해 원시 값을 재할당하면 새로운 메모리 공간을 확보하고 재할당한 값을 저장한 후, 변수가 참조하던 메모리 공간의 주소를 변경한다, ==> 불변성

//문자열은 0개 이상의 문자들로 이뤄진 집합이다.
var str1 = ""; //0개의 문자로 이뤄진 문자열(빈 문자열)
var str2 = "Hello"; //5개의 문자로 이뤄진 문자열

var str = "Hello";
str = "world";

//유사배열객체 : 배열처럼 인덱스로 프로퍼티 값에 접근할 수 있고 length 프로퍼티를 갖는 객체. 문자열은 마치 배열처럼 인덱스를 통해 각 문자에 접근할 수 있으며,
//length 프로퍼티를 갖기 때문에 유사배열 객체이고 for문으로 순회할 수도 있다.

var str = "string";

//문자열은 유사 배열이므로 배열과 유사하게 인덱스를 사용해 각 문자에 접근할 수 있다.
console.log(str[0]); //s

//원시 값인 문자열이 객체처럼 동작한다.
console.log(str.length); //6
console.log(str.toUpperCase()); //STRING

var str = "string";

//문자열은 유사 배열이므로 배열과 유사하게 인덱스를 사용해 각 문자에 접근할 수 있다.
//문자열은 원시값이므로 변경할 수 없다. 이때 에러가 발생하지 않는다.
str[0] = "S";
console.log(str); //string
